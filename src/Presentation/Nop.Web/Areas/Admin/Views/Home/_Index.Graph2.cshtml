@model List<StudentCountByClassroomModel>

@{
    const string hideSearchBlockAttributeName = "TopicsPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);

    const string cardId = "nopcommerce-common-statistics-card";
    const string hideCardAttributeName = "HideCommonStatisticsCard";

    var hideCard = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideCardAttributeName);
}
<div class="card card-primary card-outline">
    <div class="card-header with-border clearfix">
        <div class="card-title">
            Student Count By Time
        </div>
        <div class="card-tools float-right">
            <button type="button" class="btn btn-tool" data-card-widget="collapse">
                @if (hideCard)
                {
                    <text><i class="fas fa-plus"></i></text>
                }
                else
                {
                    <text><i class="fas fa-minus"></i></text>
                }
            </button>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
 <canvas id="myChart-2"></canvas>
        </div>
    </div>
</div>

<script>
  const ctx2 = document.getElementById('myChart-2');

  new Chart(ctx2, {
    type: 'bar',
    data: {
      labels: [@foreach (var item in Model)
               {
                   <text>'@item.Classroom',</text>
               }],
      datasets: [{
        label: 'Student Count',
        data: [@foreach (var item in Model)
                              {
                                  <text>@item.Count,</text>
                              }
                             ],
        borderWidth: 1
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }       
      }
    }
  });
</script>